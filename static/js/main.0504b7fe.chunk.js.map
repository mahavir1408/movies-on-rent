{"version":3,"sources":["components/common/list-group.js","components/common/pagination.js","services/log-service.js","services/http-service.js","services/movie-service.js","services/genre-service.js","utils/paginate.js","components/common/search-box.js","components/common/like.js","components/common/table-header.js","components/common/table-body.js","components/common/table.js","services/auth-service.js","components/movies-table.js","components/movies.js","components/customers.js","components/rentals.js","components/not-found.js","components/navbar.js","components/common/input.js","components/common/select.js","components/common/form.js","components/movie-form.js","components/login-form.js","components/logout.js","services/user-service.js","components/register-form.js","components/common/protected-route.js","App.js","serviceWorker.js","index.js"],"names":["ListGroup","items","textProperty","valueProperty","onItemSelect","selectedGenre","className","map","item","onClick","key","defaultProps","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","page","i","href","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","movieUrl","id","getMovie","movieId","http","saveMovie","movie","_id","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Like","liked","classes","aria-hidden","style","cursor","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","createKey","data","Table","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","Movies","state","genres","searchQuery","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Customers","Rentals","NotFound","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Logout","register","RegisterForm","userService","ProtectedRoute","component","render","App","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0504b7fe.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  onItemSelect,\n  selectedGenre,\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => {\n        return (\n          <li\n            onClick={() => onItemSelect(item)}\n            key={item[valueProperty]}\n            className={\n              item === selectedGenre\n                ? \"list-group-item active\"\n                : \"list-group-item\"\n            }\n          >\n            {item[textProperty]}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page, i) => (\n          <li\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n            key={i}\n          >\n            <a\n              href=\"#/\"\n              className=\"page-link\"\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","function init() {}\n\nfunction log(error) {\n  console.log(error);\n}\n\nexport default { init, log };\n","import axios from \"axios\";\nimport logger from \"./log-service\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./http-service\";\n\nconst apiEndpoint = `/movies`;\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","import http from \"./http-service\";\n\nexport function getGenres() {\n  return http.get(`/genres`);\n}\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Like = ({ liked, onClick }) => {\n  let classes = \"fa fa-heart\";\n  if (!liked) classes += \"-o\";\n  return (\n    <i\n      className={classes}\n      onClick={onClick}\n      aria-hidden=\"true\"\n      style={{ cursor: \"pointer\" }}\n    ></i>\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path) {\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== this.props.sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./table-header\";\nimport TableBody from \"./table-body\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import jwtDecode from \"jwt-decode\";\nimport http from \"./http-service\";\n\nconst apiEndpoint = `/auth`;\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    const user = jwtDecode(jwt);\n    return user;\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n","import React, { Component } from \"react\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport { Link } from \"react-router-dom\";\nimport auth from \"../services/auth-service\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      ),\n    },\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: (movie) => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    ),\n  };\n\n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n    if (user && user.isAdmin) {\n      this.columns.push(this.deleteColumn);\n    }\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListGroup from \"./common/list-group\";\nimport Pagination from \"./common/pagination\";\nimport { getMovies, deleteMovie } from \"../services/movie-service\";\nimport { getGenres } from \"../services/genre-service\";\nimport { paginate } from \"../utils/paginate\";\nimport SearchBox from \"./common/search-box\";\nimport MoviesTable from \"./movies-table\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ name: \"All Genres\", _id: \"\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This movie has already been deleted.\");\n        this.setState({ movies: originalMovies });\n      }\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPageData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery) {\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else if (selectedGenre && selectedGenre._id) {\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n    }\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n    } = this.state;\n\n    const { user } = this.props;\n    const { totalCount, data: movies } = this.getPageData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <ListGroup\n            items={this.state.genres}\n            onItemSelect={this.handleGenreSelect}\n            selectedGenre={selectedGenre}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>NotFound</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst Navbar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-link active\" to=\"/movies\">\n            Movies\n          </NavLink>\n          <NavLink className=\"nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n          {!user && (\n            <React.Fragment>\n              <NavLink className=\"nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className=\"nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map((option) => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) {\n      errors[item.path[0]] = item.message;\n    }\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) {\n      errors[input.name] = errorMessage;\n    } else {\n      delete errors[input.name];\n    }\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movie-service\";\nimport { getGenres } from \"../services/genre-service\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\"),\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        return this.props.history.replace(\"/not-found\");\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/auth-service\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import { Component } from \"react\";\nimport auth from \"../services/auth-service\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import http from \"./http-service\";\n\nconst apiEndpoint = `/users`;\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name,\n  });\n}\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/user-service\";\nimport auth from \"../services/auth-service\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../../services/auth-service\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!auth.getCurrentUser()) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location },\n              }}\n            />\n          );\n        } else {\n          return Component ? <Component {...props} /> : render(props);\n        }\n      }}\n    ></Route>\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/not-found\";\nimport Navbar from \"./components/navbar\";\nimport MovieForm from \"./components/movie-form\";\nimport LoginForm from \"./components/login-form\";\nimport Logout from \"./components/logout\";\nimport auth from \"./services/auth-service\";\nimport RegisterForm from \"./components/register-form\";\nimport ProtectedRoute from \"./components/common/protected-route\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <Navbar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm}></Route>\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <ProtectedRoute\n              path=\"/movies/:id\"\n              component={MovieForm}\n            ></ProtectedRoute>\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={user} />}\n            ></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(\"PROCESS.env\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}